rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
      allow read, write: if false;

      match /books/{book} {
        allow read: if request.auth.token.permissions.VIEW_BOOKS;
        allow create, update: if request.auth.token.permissions.MANAGE_BOOKS;
        allow delete: if request.auth.token.role >= 1000 && request.auth.token.permissions.MANAGE_BOOKS;
      }

      match /{path=**}/copies/{copy} {
        allow read: if request.auth.token.permissions.VIEW_BOOKS;
        allow create, update: if request.auth.token.permissions.MANAGE_BOOKS;
        allow delete: if request.auth.token.role >= 1000 && request.auth.token.permissions.MANAGE_BOOKS;
      }

      match /{path=**}/reviews/{review} {
        allow read: if request.auth.token.permissions.VIEW_BOOKS;
        allow write: if request.auth.token.role >= 1000 && request.auth.token.permissions.MANAGE_BOOKS;
      }

      match /users/{user} {
        allow get: if request.auth.token.permissions.MANAGE_USERS || request.auth.token.permissions.CHECK_OUT || request.auth.uid == user;
        allow list: if (request.auth.token.permissions.MANAGE_USERS);
        allow create, delete: if false;
        allow update: if (request.auth.token.permissions.MANAGE_USERS) && (user != request.auth.uid || request.auth.token.role >= 1000);
  }

      match /checkouts/{checkout} {
        allow get: if request.auth.token.permissions.CHECK_OUT || request.auth.token.permissions.MANAGE_CHECKOUTS;
        allow list: if request.auth.token.permissions.CHECK_OUT || request.auth.token.permissions.MANAGE_CHECKOUTS;
        allow update: if request.auth.token.permissions.MANAGE_CHECKOUTS;
        allow create, delete: if false;
      }

      match /book_requests/{book_request} {
        allow get, list: if request.auth.token.permissions.MANAGE_BOOKS;
        allow create: if request.auth.token.permissions.VIEW_BOOKS;
        allow update, delete: if false;
    }
  }
}